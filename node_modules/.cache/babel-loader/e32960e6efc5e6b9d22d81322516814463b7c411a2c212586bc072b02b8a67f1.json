{"ast":null,"code":"var _jsxFileName = \"/Users/devon/telegram_dev/twa-sdk-demo/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WebApp from '@twa-dev/sdk';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [colorScheme, setColorScheme] = useState(WebApp.colorScheme);\n  const [viewportHeight, setViewportHeight] = useState(WebApp.viewportHeight);\n  useEffect(() => {\n    // Initialize the web app\n    WebApp.ready();\n\n    // Store the event handlers in variables so we can reference them in cleanup\n    const themeChangeHandler = () => {\n      setColorScheme(WebApp.colorScheme);\n    };\n    const viewportChangeHandler = () => {\n      setViewportHeight(WebApp.viewportHeight);\n    };\n\n    // Add event listeners\n    WebApp.onEvent('themeChanged', themeChangeHandler);\n    WebApp.onEvent('viewportChanged', viewportChangeHandler);\n\n    // Setup MainButton\n    WebApp.MainButton.setText('Click Me!');\n    WebApp.MainButton.onClick(() => {\n      WebApp.showAlert('Main button clicked!');\n    });\n\n    // Setup BackButton\n    WebApp.BackButton.onClick(() => {\n      WebApp.showAlert('Back button clicked!');\n    });\n    return () => {\n      // Cleanup event listeners with both event name and handler\n      WebApp.offEvent('themeChanged', themeChangeHandler);\n      WebApp.offEvent('viewportChanged', viewportChangeHandler);\n    };\n  }, []);\n  const handleShowPopup = () => {\n    try {\n      // Try native browser alert as fallback\n      window.alert('This is a demo popup.\\nThe Telegram Web App popup feature is not supported in the current environment.');\n    } catch (error) {\n      console.error('Popup display failed:', error);\n    }\n  };\n  const handleRequestContact = () => {\n    WebApp.requestContact(success => {\n      if (success) {\n        WebApp.showAlert('Contact shared successfully!');\n      } else {\n        WebApp.showAlert('Contact sharing was cancelled');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: viewportHeight\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: `App-header ${colorScheme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Telegram Web App Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Color Scheme: \", colorScheme]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Viewport Height: \", viewportHeight, \"px\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => WebApp.MainButton.show(),\n          children: \"Show Main Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => WebApp.MainButton.hide(),\n          children: \"Hide Main Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => WebApp.BackButton.show(),\n          children: \"Show Back Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => WebApp.BackButton.hide(),\n          children: \"Hide Back Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShowPopup,\n          children: \"Show Popup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRequestContact,\n          children: \"Request Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"6s1Xi5AuOzd4/RpAT25FJMz9g0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","WebApp","jsxDEV","_jsxDEV","App","_s","colorScheme","setColorScheme","viewportHeight","setViewportHeight","ready","themeChangeHandler","viewportChangeHandler","onEvent","MainButton","setText","onClick","showAlert","BackButton","offEvent","handleShowPopup","window","alert","error","console","handleRequestContact","requestContact","success","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","show","hide","_c","$RefreshReg$"],"sources":["/Users/devon/telegram_dev/twa-sdk-demo/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport WebApp from '@twa-dev/sdk';\nimport './App.css';\n\nfunction App() {\n    const [colorScheme, setColorScheme] = useState(WebApp.colorScheme);\n    const [viewportHeight, setViewportHeight] = useState(WebApp.viewportHeight);\n\n    useEffect(() => {\n        // Initialize the web app\n        WebApp.ready();\n\n        // Store the event handlers in variables so we can reference them in cleanup\n        const themeChangeHandler = () => {\n            setColorScheme(WebApp.colorScheme);\n        };\n\n        const viewportChangeHandler = () => {\n            setViewportHeight(WebApp.viewportHeight);\n        };\n\n        // Add event listeners\n        WebApp.onEvent('themeChanged', themeChangeHandler);\n        WebApp.onEvent('viewportChanged', viewportChangeHandler);\n\n        // Setup MainButton\n        WebApp.MainButton.setText('Click Me!');\n        WebApp.MainButton.onClick(() => {\n            WebApp.showAlert('Main button clicked!');\n        });\n\n        // Setup BackButton\n        WebApp.BackButton.onClick(() => {\n            WebApp.showAlert('Back button clicked!');\n        });\n\n        return () => {\n            // Cleanup event listeners with both event name and handler\n            WebApp.offEvent('themeChanged', themeChangeHandler);\n            WebApp.offEvent('viewportChanged', viewportChangeHandler);\n        };\n    }, []);\n\n    const handleShowPopup = () => {\n        try {\n            // Try native browser alert as fallback\n            window.alert('This is a demo popup.\\nThe Telegram Web App popup feature is not supported in the current environment.');\n        } catch (error) {\n            console.error('Popup display failed:', error);\n        }\n    };\n\n    const handleRequestContact = () => {\n        WebApp.requestContact((success) => {\n            if (success) {\n                WebApp.showAlert('Contact shared successfully!');\n            } else {\n                WebApp.showAlert('Contact sharing was cancelled');\n            }\n        });\n    };\n\n    return (\n        <div className=\"App\" style={{ height: viewportHeight }}>\n            <header className={`App-header ${colorScheme}`}>\n                <h1>Telegram Web App Demo</h1>\n                <p>Color Scheme: {colorScheme}</p>\n                <p>Viewport Height: {viewportHeight}px</p>\n\n                <div className=\"button-container\">\n                    <button onClick={() => WebApp.MainButton.show()}>\n                        Show Main Button\n                    </button>\n                    <button onClick={() => WebApp.MainButton.hide()}>\n                        Hide Main Button\n                    </button>\n                    <button onClick={() => WebApp.BackButton.show()}>\n                        Show Back Button\n                    </button>\n                    <button onClick={() => WebApp.BackButton.hide()}>\n                        Hide Back Button\n                    </button>\n                    <button onClick={handleShowPopup}>\n                        Show Popup\n                    </button>\n                    <button onClick={handleRequestContact}>\n                        Request Contact\n                    </button>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAACC,MAAM,CAACK,WAAW,CAAC;EAClE,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAACC,MAAM,CAACO,cAAc,CAAC;EAE3ET,SAAS,CAAC,MAAM;IACZ;IACAE,MAAM,CAACS,KAAK,CAAC,CAAC;;IAEd;IACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC7BJ,cAAc,CAACN,MAAM,CAACK,WAAW,CAAC;IACtC,CAAC;IAED,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;MAChCH,iBAAiB,CAACR,MAAM,CAACO,cAAc,CAAC;IAC5C,CAAC;;IAED;IACAP,MAAM,CAACY,OAAO,CAAC,cAAc,EAAEF,kBAAkB,CAAC;IAClDV,MAAM,CAACY,OAAO,CAAC,iBAAiB,EAAED,qBAAqB,CAAC;;IAExD;IACAX,MAAM,CAACa,UAAU,CAACC,OAAO,CAAC,WAAW,CAAC;IACtCd,MAAM,CAACa,UAAU,CAACE,OAAO,CAAC,MAAM;MAC5Bf,MAAM,CAACgB,SAAS,CAAC,sBAAsB,CAAC;IAC5C,CAAC,CAAC;;IAEF;IACAhB,MAAM,CAACiB,UAAU,CAACF,OAAO,CAAC,MAAM;MAC5Bf,MAAM,CAACgB,SAAS,CAAC,sBAAsB,CAAC;IAC5C,CAAC,CAAC;IAEF,OAAO,MAAM;MACT;MACAhB,MAAM,CAACkB,QAAQ,CAAC,cAAc,EAAER,kBAAkB,CAAC;MACnDV,MAAM,CAACkB,QAAQ,CAAC,iBAAiB,EAAEP,qBAAqB,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAI;MACA;MACAC,MAAM,CAACC,KAAK,CAAC,wGAAwG,CAAC;IAC1H,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IAC/BxB,MAAM,CAACyB,cAAc,CAAEC,OAAO,IAAK;MAC/B,IAAIA,OAAO,EAAE;QACT1B,MAAM,CAACgB,SAAS,CAAC,8BAA8B,CAAC;MACpD,CAAC,MAAM;QACHhB,MAAM,CAACgB,SAAS,CAAC,+BAA+B,CAAC;MACrD;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACId,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAEtB;IAAe,CAAE;IAAAuB,QAAA,eACnD5B,OAAA;MAAQyB,SAAS,EAAE,cAActB,WAAW,EAAG;MAAAyB,QAAA,gBAC3C5B,OAAA;QAAA4B,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhC,OAAA;QAAA4B,QAAA,GAAG,gBAAc,EAACzB,WAAW;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClChC,OAAA;QAAA4B,QAAA,GAAG,mBAAiB,EAACvB,cAAc,EAAC,IAAE;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE1ChC,OAAA;QAAKyB,SAAS,EAAC,kBAAkB;QAAAG,QAAA,gBAC7B5B,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMf,MAAM,CAACa,UAAU,CAACsB,IAAI,CAAC,CAAE;UAAAL,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThC,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMf,MAAM,CAACa,UAAU,CAACuB,IAAI,CAAC,CAAE;UAAAN,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThC,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMf,MAAM,CAACiB,UAAU,CAACkB,IAAI,CAAC,CAAE;UAAAL,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThC,OAAA;UAAQa,OAAO,EAAEA,CAAA,KAAMf,MAAM,CAACiB,UAAU,CAACmB,IAAI,CAAC,CAAE;UAAAN,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThC,OAAA;UAAQa,OAAO,EAAEI,eAAgB;UAAAW,QAAA,EAAC;QAElC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThC,OAAA;UAAQa,OAAO,EAAES,oBAAqB;UAAAM,QAAA,EAAC;QAEvC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC9B,EAAA,CAxFQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}